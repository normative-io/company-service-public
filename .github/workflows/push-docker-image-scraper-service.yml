# This workflow will build and push a new Scraper Service container image to Amazon ECR
# on a code push in the scraper-service/ folder.

name: Push Scraper Service Docker image

on:
  push:
    branches:
      - main
    paths:
      - 'scraper-service/*'

env:
  ECR_REPOSITORY: company-service/scraper-service

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.CI_AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # Note: if we don't want latest, this could be ${{ github.sha }}
          IMAGE_TAG: latest
        run: |
          # Build a docker container and push it to ECR.
          cd scraper-service
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
